[
    /* DISCIPLINAS DE ENGENHARIA DE SOFTWARE*/
    {
        "id": "D18",
        "nome": "Construção de Software",
        "nucleo": "NC",
        "teo": 48,
        "pra": 80,
        "total": 128,
        "periodo": "5°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Visão geral (4h): construção (minimizar complexidade, antecipação de mudança, verificação, padrões), projeto de software (sofware design), qualidade de produto.",
            "2. Planejamento (8h): linguagens de programação e processos de construção.",
            "3. Gerência de construção (16h): controle de versão, inspeção e revisão de código.",
            "4. Fundamentos de codificação (32h): estratégias recomendadas para criar código, variáveis, classes, interfaces, polimorfismo, rotinas, recursão, condições, laços, tratamento de exceção, reflexão, programação defensiva, padrão de codificação (leiaute e estilo), documentação, ferramentas de programação.",
            "5. Projeto (design) detalhado e codificação (32h): noções de projeto detalhado, especificação de projeto, análise sintática (parsing), expressões regulares, parametrização (generics), closure, logging, configuração de software em tempo de execução. Internacionalização. Técnicas de construção baseadas em estado e tabelas.",
            "6. Refatoração (8h).",
            "7. Testes de unidade (16h).",
            "8. Detecção e remoção de defeitos (debugging) (8h).",
            "9. Integração (4h): integração contínua."
        ],
        "condicoesMinimas": [
            "(Segue instruções). Explicar a construção de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
            "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
            "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
            "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
            "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
            "(Segue instruções). Depurar (debugging) código.",
            "(Segue instruções). Criar testes de unidade básicos empregando estratégias recomendadas.",
            "(Segue instruções). Localizar e reutilizar código (bibliotecas e frameworks).",
            "(Segue instruções). Colaborar com a construção de código em equipe.",
            "(Segue instruções). Avaliar a qualidade interna de código e, quando apropriado, aplicar estratégias recomendadas de refatoração."
        ]
    },
    {
        "id": "D19",
        "nome": "Modelagem de Software",
        "nucleo": "NC",
        "teo": 16,
        "pra": 48,
        "total": 64,
        "periodo": "5°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Conceitos (4h): software, qualidade de software, requisitos de software, projeto de software.",
            "2. Processo de projeto de software (4h).",
            "3. Notações para registro de modelos orientados a objetos (16h).",
            "4. Modelagem de software orientado a objetos (40h)."
        ],
        "condicoesMinimas": [
            "(Faz com orientação). Explicar o que é software, qualidade de software, requisitos de software e a relação entre eles.",
            "(Faz sem orientação). Empregar notações para registro de projeto de software orientado a objetos.",
            "(Segue instruções). Criar modelos de projeto de software orientado a objetos."
        ]
    },
    {
        "id": "D20",
        "nome": "Processos de Software ",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "preiodo": "5°",
        "enidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Visão geral (8h): processo, método e modelo.",
            "2. Processos específicos de software: processos de implementação (12h), processos de suporte (12h) e processos de reutilização (2h).",
            "3. Qualidade de Processo: modelos de qualidade de processos (12h), avaliação da qualidade do processo (12h) e abordagens de implementação de processo (6h)."
        ],
        "condicoesMinimas": [
            "(Segue instruções). Explicar processos de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
            "(Faz sem orientação). Correlacionar os conceitos de processo de software, método de software, modelo de software, modelo de processo e modelo de qualidade de processo.",
            "(Faz sem orientação). Explicar quais são os processos específicos de software: objetivo de cada processo e principais resultados.",
            "(Segue instruções). Explicar o uso de modelos de qualidade de processo: implementação e avaliação.",
            "(Segue instruções). Obter resultados de processo usando métodos e modelos."
        ]
    },
    {
        "id": "D21",
        "nome": "Engenharia de Sistemas",
        "nucleo": "NC",
        "teo": 64,
        "pra": 0,
        "total": 64,
        "periodo": "5°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Fundamentos de engenharia (16h): métodos empíricos e técnicas experimentais; análise estatística; medição; design; modelagem, prototipação e simulação; normas e padrões; análise de causa raiz.",
            "2. Fundamentos de sistema (16h): taxonomias de sistema; sistemas de engenharia (sistemas produzidos por engenharia - engineered systems); sistemas intensivos em software (software-intensive systems); sistemas de sistemas; complexidade de sistemas; propriedades emergentes; prmcipios do pensamento sistêmico; representação de sistemas por modelos.",
            "3. Engenharia de Sistemas (32h): abordagens e metodologias; partes interessadas (stakeholders) e suas necessidades; ciclo de vida de sistemas de engenharia (concepção, conceitos operacionais, design, validação de design, construção, validação de construção, implantação, sustentação e descontinuação); processos do ciclo de vida de sistemas (negociação, preparação para projeto organizacional, gestão técnica, processos técnicos); qualidade de processo."
        ],
        "condicoesMinimas": [
            "(Segue instruções). Modelar o ciclo de vida de um sistema intensivo em software, considerando as implicações e perspectivas dos processos do ciclo de vida de sistemas.",
            "(Faz com orientação). Definir o conceito do sistema proposto (propósito desejado, contexto operacional, partes interessadas e conceito de uso do sistema).",
            "(Segue instruções). Selecionar um modelo de ciclo de vida de software adequado ao modelo de ciclo de vida de engenharia de sistemas e integrar os dois modelos.",
            "(Faz com orientação). Desenvolver conceitos operacionais do sistema (ambientes operacionais, características priorizadas, atributos de qualidade, cenários operacionais, suposições, dependências, limitações e exclusões)."
        ]
    },
    {
        "id": "D22",
        "nome": "Design de Software",
        "nucleo": "NC",
        "teo": 48,
        "pra": 80,
        "total": 128,
        "periodo": "6°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Conceitos (8h): design, software, qualidade de software, requisitos de software, arquitetura de software e projeto detalhado.",
            "2. Contexto de projeto de software (4h).",
            "3. Processos e artefatos de projeto de software (8h).",
            "4. Notações de projeto de software (8h).",
            "5. Princípios e fundamentos de projeto de software (16h): abstração, acoplamento, coesão, decomposição, encapsulamento, separar interface e implementação, suficiência, completitude, simplicidade e separation of concerns.",
            "6. Aspectos de projeto de software (16h): concorrência, controle e tratamento de eventos, tratamento de exceção, persistência, distribuição, interação (apresentação).",
            "7. Qualidade de projeto de software (8h): técnicas de avaliação, medidas, ferramentas.",
            "8. Métodos e estratégias de projeto (4h).",
            "9. Método para projeto orientado a objetos (4h).",
            "10. Padrões de projeto orientado a objetos (16h).",
            "11. Prática de projeto de software orientado a objetos (36h)."
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Explicar o que é software, qualidade de software, requisitos de software, arquitetura de software, projeto detalhado, design, e a relação entre eles.",
            "(Faz com orientação). Aplicar princípios de projeto de software.",
            "(Faz com orientação). Empregar aspectos de projeto de software.",
            "(Faz com orientação). Fazer uso de medidas de qualidade de projeto de software.",
            "(Segue instruções). Criar projeto de software a partir de um problema."
        ]
    },
    {
        "id": "D23",
        "nome": "Domínios de Software",
        "nucleo": "NC",
        "teo": 16,
        "pra": 48,
        "total": 64,
        "periodo": "6°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Visão ampla de domínios de desenvolvimento (4h): sistemas, componentes e a relação entre eles.",
            "2. Especificidades de alguns domínios de desenvolvimento (8h).",
            "3. Especificidades de um domínio (12h): requisitos, projeto, construção.",
            "4. Desenvolvimento de software em um domínio (ênfase na construção) (40h)."
        ],
        "condicoesMinimas": [
            "(Faz com orientação). Explicar a construção de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
            "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
            "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
            "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
            "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
            "(Segue instruções). Colaborar com a construção de código em equipe.",
            "(Segue instruções). Explicar domínios de desenvolvimento (categorias) e as especificidades correspondentes.",
            "(Segue instruções). Explicar um domínio de software e as estratégias de desenvolvimento correspondentes."
        ]
    },
    {
        "id": "D24",
        "nome": "Processos de Qualidade de Software",
        "nucleo": "NC",
        "teo": 48,
        "pra": 16,
        "total": 64,
        "periodo": "6°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Visão Geral de Qualidade de Software (4h): custos e impactos da qualidade de software, questões éticas e culturais da qualidade de software.",
            "2. Processo de garantia da qualidade de software (IOh): garantia do produto e garantia do processo.",
            "3. Processo de Verificação e Validação de Software (36h): requisito, projeto (design), código, integração, documentação.",
            "4. Processos de Revisão e Auditoria de Software (14h): revisões gerenciais e revisões técnicas."
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Explicar processos de qualidade de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
            "(Faz com orientação). Explicar a diferença e a relação entre a garantia do produto e a garantia do processo.",
            "(Segue instruções). Usar um processo da garantia da qualidade de software,",
            "(Segue instruções). Usar um processo para a verificação e validação de software.",
            "(Segue instruções). Usar um processo para a revisão e auditoria de software.",
            "(Faz sem orientação). Colaborar em uma equipe na execução de um processo de qualidade.",
            "(Segue instruções). Documentar resultados dos processos de qualidade de software.",
            "(Segue instruções). Identificar e utilizar ferramentas de ap010 ao controle de qualidade de artefatos de software."
        ]
    },
    {
        "id": "D25",
        "nome": "Gerência de Projeto de Software",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "6°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Projeto e gerência de projeto (4h): ciclo de vida de produto, serviço e projeto; partes interessadas (stakeholders); correlação entre projetos, operações e programas; gerência de portfólio de projetos; escritório de projetos (PMO).",
            "2. Tipos de projeto de software (4h): aquisição, desenvolvimento, refatoração, descontinuação.",
            "3. Tipos de ciclo de vida de projeto de software (4h): preditivo, iterativo, adaptativo; processos empíricos e processos definidos e sua relação com métodos ágeis e métodos planejados para gerência de projeto de software.",
            "4. Modelos de qualidade de processo de gerência de projeto de software (4h).",
            "5. Áreas de conhecimento da gerência de projetos aplicadas a projetos de software (48h): escopo, tempo, custo, qualidade, recursos humanos, comunicações, riscos, aquisições, integração e partes interessadas."
        ],
        "condicoesMinimas": [
            "(Segue instruções). Usar normas, modelos e ferramentas de gerência de projeto para planejamento e acompanhamento de projeto de software.",
            "(Faz com orientação). Selecionar e implementar o tipo de modelo de processo (dirigido por plano, incremental ou adaptativo) de acordo com as características do contexto do projeto de software.",
            "(Segue instruções). Selecionar e implementar o tipo de ciclo de vida de software (ou paradigma de engenharia de software - cascata, espiral, iterativo, baseado em modelo de maturidade, etc.) de acordo com as características do contexto do projeto de software."
        ]
    },
    {
        "id": "D26",
        "nome": "Software Concorrente e Distribuído",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "7°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Qualidade de produto (4h): escalabilidade, tolerância a falhas, disponibilidade, desempenho.",
            "2. Conceitos (4h): middleware, distribuição, paralelismo, concorrência, RESTful, web, internet das coisas, contêineres, troca de mensagens, micro-serviços, serviços web.",
            "3. Métodos para construção de software distribuído e para construção de software concorrente (8h)",
            "4. Concorrência (16h): paralelismo, aplicações 10-intensive e CPUintensive, thread safe, memória compartilhada, Software Transactional Memory, atores, abordagens para explorar concorrência.",
            "5. Distribuição (24h): projeto, implementação e uso de interface de programação, RESTful, serviços web e micro-serviços (microservices).",
            "6. Troca de mensagens (messagi,ng) (8h)"
        ],
        "condicoesMinimas": [
            "(Faz com orientação). Explicar a construção de software, concorrência/distribuição e a relação desses com a engenharia de software e de sistema.",
            "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
            "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
            "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
            "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
            "(Segue instruções). Localizar e reutilizar código (bibliotecas e frameworks).",
            "(Segue instruções). Colaborar com a construção de código em equipe.",
            "(Segue instruções). Avaliar a qualidade interna de código e, quando apropriado, aplicar estratégias recomendadas de refatoração.",
            "(Segue instruções). Explicar conceitos de concorrência e distribuição.",
            "(Segue instruções). Criar código que faz uso de concorrência, distribuição e ferramentas correlatas."
        ]
    },
    {
        "id": "D27",
        "nome": "Experiência do Usuário de Software",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "7°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Qualidade em uso (4h): usabilidade, acessibilidade.",
            "2. Design centrado no usuário (8h): diretrizes, pesquisa, personas, jornadas de usuário, modelagem (especificação) e ferramentas.",
            "3. Projeto de interação (16h): diretrizes, criação, modelagem (especificação) e ferramentas.",
            "4. Design de software e interfaces gráficas (8): padrões arquiteturais para design da camada de apresentação (MVC, MVP, MVVM e outros).",
            "5. Implementação de interfaces (20h).",
            "6. Modelos de validação de experiência (8h): modelos, métodos e técnicas para validação de experiência do usuário."
        ],
        "condicoesMinimas": [
            "(Faz com orientação). Explicar a construção de software, experiência do usuário e a relação com a Engenharia de Software e a noção se sistema.",
            "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memona, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
            "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
            "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
            "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
            "(Segue instruções). Colaborar com a construção de código em equipe.",
            "(Segue instruções). Auxiliar na criação de requisitos de usabilidade.",
            "(Segue instruções). Criar e registrar projeto de interação que atende requisitos de usabilidade.",
            "(Faz com orientação). Usar ferramentas e bibliotecas para o desenvolvimento de código de interfaces.",
            "(Faz com orientação). Criar código em conformidade com o projeto de interação correspondente."
        ]
    },
    {
        "id": "D28",
        "nome": "Arquitetura de Software",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "7°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Conceitos (4h): software, qualidade de software, requisitos de software, arquitetura de software e projeto detalhado.",
            "2. Requisitos funcionais e requisitos de qualidade (8h): conceituação e identificação de requisitos relevantes para a arquitetura.",
            "3. Documentação de arquitetura de software (8h).",
            "4. Fundamentos de arquitetura de software (4h): importância, contexto, estilos.",
            "5. Método de desenvolvimento de arquitetura de software (8h).",
            "6. Técnicas para satisfazer requisitos de qualidade (16h).",
            "7. Criação de arquiteturas de software (16h)."
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Explicar o que é software, qualidade de software, requisitos de software, arquitetura de software, projeto detalhado, e a relação entre eles.",
            "(Faz com orientação). Compreender a documentação de arquitetura de software.",
            "(Segue instruções). Documentar arquitetura de software.",
            "(Segue instruções). Criar arquitetura de software."
        ]
    },
    {
        "id": "D29",
        "nome": "Requisitos de Software",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "7°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Processo de requisitos (16h): definições básicas, eliciação de requisitos, análise de requisitos, especificação de requisitos, verificação e validação de requisitos.",
            "2. Modelos e métodos da engenharia de requisitos (32).",
            "3. Gerência de projetos de engenharia de requisitos (8).",
            "4. Processo de projeto arquitetural (8h): relação com requisitos."
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Explicar requisitos de software, a relação dessa área de conhecimento com as demais da engenharia de software, arquitetura de software em especial, e a relação com o conceito de sistema.",
            "(Segue instruções). Usar um processo de requisitos de software.",
            "(Segue instruções). Eliciar de requisitos de software.",
            "(Segue instruções). Construir modelos conceituais de software.",
            "(Segue instruções). Especificar requisitos de software.",
            "(Faz com orientação). Verificar e validar requisitos de software.",
            "(Segue instruções). Identificar e utilizar ferramentas de requisitos de software.",
            "(Faz sem orientação). Colaborar em uma equipe na execução de um processo de requisitos."
        ]
    },
    {
        "id": "D30",
        "nome": "Governança e Gestão de Serviços de Software",
        "nucleo": "NC",
        "teo": 48,
        "pra": 16,
        "total": 64,
        "periodo": "7°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Governança (8h): governança corporativa; governança de TI (GTI); governança de Software (GS); princípios da GS; conformidade (compliance); alinhamento dos serviços de software ao negócio da organização; normas, frameworks, padrões, modelos de qualidade e de maturidade de GS.",
            "2. Abordagens para GS (8h): aplicação de abordagens de GS em um contexto organizacional. Objetivos de controle para GS; indicadores e avaliação de desempenho de software; direcionamento, avaliação e controle do uso de serviços de software para apoiar os objetivos de uma organização.",
            "3. Planejamento e controle estratégico de software (8h): alinhamento entre objetivos organizacionais e objetivos relacionados a software; avaliação, direcionamento e monitoramento de processos de software; diagnóstico de maturidade de processos de software; alinhamento de políticas de software ao plano diretor de TI de uma organização. Gestão de riscos de software; riscos organizacionais; riscos relacionados à segurança física e lógica de software.",
            "4. Governança de dados (8h): Segurança da informação em uma organização; Segurança de software.",
            "5. Software como um serviço (SaaS) (8h): serviços de Software (SS); gestão de Serviços de Software (GSS); Estratégia organizacional para SS; Modelos, normas e padrões relacionados à GSS.",
            "6. Ciclo de vida de SS (8h): planejamento; desenvolvimento; implantação e sustentação; Operação de SS e apoio (suporte) à operação de SS; Descontinuação de SS.",
            "7. Manutenção de SS (8h): correção, adaptação e evolução de SS; gestão de incidentes e problemas em SS; controle de mudança e de configuração; controle de qualidade.",
            "8. Gerência de processos de negócio (BPM - Business Process Management) aplicada à GSS (8h): representação de SS como processos de negócio; notação para modelagem de processos de negócio (BPMN); análise, validação e evolução de processos de negócio e de SS."
        ],
        "condicoesMinimas": [
            "(Segue instruções). Planejar a estratégia de software para uma organização, considerando a pouca disponibilidade de informações de longo prazo, a escassez de recursos para implementação dessa estratégia e a necessidade de alinhamento entre a GS e a governança corporativa.",
            "(Faz com orientação). Controlar o uso atual e futuro de software, otimizando o seu valor agregado para o negócio da organização.",
            "(Segue instruções). Planejar e implementar (projetar, desenvolver, implantar, monitorar, medir, controlar e sustentar) uma estratégia organizacional para GSS em conformidade com o plano estratégico da organização.",
            "(Faz com orientação). Modelar SS e processos de negócio, usando BPMN, em conformidade com os requisitos organizacionais dos processos e serviços."
        ]
    },
    {
        "id": "D31",
        "nome": "Software para Sistemas Ubíquos",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "8°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Sistemas de informação que fazem uso de dispositivos (ubíquos) (16h): smartphones, sensores, internet das coisas (IoT), stream analytics e aspectos de segurança (vulnerabilidades, criptografia, certificados digitais).",
            "2. Definição de arquiteturas para soluções móveis (16): conectar serviços, possivelmente de grande volume, fluxo e em tempo real, com a necessidade de analisá-los.",
            "3. Desenvolvimento de código para smartphone, sensor ou outro dispositivo capaz de alimentar/receber informações de sistema de informação (32h)."
        ],
        "condicoesMinimas": [
            "(Faz com orientação). Explicar a construção de software, dispositivos e a relação desses com a engenharia de software e de sistema.",
            "(Faz sem orientação). Explicar a construção de software e a relação dessa área de conhecimento com as demais da engenharia de software.",
            "(Faz com orientação). Usar e configurar ferramentas para edição, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos de linha de comandos para busca e encadear comandos.",
            "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
            "(Faz com orientação). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
            "(Faz com orientação). Detalhar projeto (design) em conformidade com requisitos de software.",
            "(Faz com orientação). Detalhar projeto de interação (design) em conformidade com requisitos de software.",
            "(Faz com orientação). Localizar e reutilizar código (bibliotecas e frameworks).",
            "(Faz com orientação). Colaborar com a construção de código em equipe.",
            "(Faz com orientação). Explicar a construção de software, segurança e a relação desses com a engenharia de software e de sistema.",
            "(Segue instruções). Auxiliar na criação de modelo de ameaça.",
            "(Segue instruções). Criar código que faz uso de recursos de segurança (criptografia de dados, assinatura e verificação de assinatura digital)."
        ]
    },
    {
        "id": "D32",
        "nome": "Software para Persistência de Dados",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "8°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Visão geral de persistência (12h): arquivos em formato texto/binário. Serialização de objetos. Documentos XML. JSON. Bancos de dados relacionais. Bancos NoSql.",
            "2. Modelagem e implementação de bancos de dados (28h).",
            "3. Mapeamento entre 00 e relacional (8h).",
            "4. Refatoração de bancos de dados (8h).",
            "5. Integração de bancos de dados (8h)."
        ],
        "condicoesMinimas": [
            "(Faz com orientação). Explicar a construção de software, persistência e a relação desses com a engenharia de software e de sistema.",
            "(Segue instruções). Identificar e usar estratégia adequada de persistência de dados para um dado problema.",
            "(Faz com orientação). Usar ferramentas para definição e manipulação de bancos de dados.",
            "(Faz com orientação). Criar código que cria, busca, atualiza e remove dados em bancos de dados.",
            "(Segue instruções) Refatorar (refactoring) bases de dados.",
            "Faltou exigências de construção (anteriores)."
        ]
    },
    {
        "id": "D33",
        "nome": "Padrões de Arquitetura de Software",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "8°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Conceitos (12h): arquitetura de software e padrões de arquitetura (blackboard, microservices, invocação implícita, arquitetura orientada a serviços, multitier, arquitetura orienta a eventos, plugin, filtros e pipes, MVC.",
            "2. Norma ISO/IEC/IEEE 42010:2011 (8h).",
            "3. Análise (avaliação) de arquiteturas de software (12h).",
            "4. Criação de arquiteturas de software (32h)."
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Compreender a documentação de arquitetura de software.",
            "(Faz com orientação). Explicar padrões de arquitetura e ilustrar o uso.",
            "(Faz com orientação). Documentar arquitetura de software.",
            "(Segue instruções). Realizar análise de arquitetura de software.",
            "(Segue instruções). Criar arquitetura de software que se beneficia de padrões de arquitetura."
        ]
    },
    {
        "id": "D34",
        "nome": "Teste de Software",
        "nucleo": "NC",
        "teo": 32,
        "pra": 32,
        "total": 64,
        "periodo": "8°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Processo de construção (8h): definições básicas, atividades e documentação.",
            "2. Processo de Teste de Software (56): definições básicas, técnicas de teste, teste baseado em intuição e experiência do engenheiro de software, atividades do processo, documentação e ferramentas.",
            "3. ",
            "4. ",
            "5. ",
            "6. ",
            "7. ",
            "8. ",
            "9. ",
            "10. "
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Explicar o teste de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
            "(Segue instruções). Usar um processo de teste de software.",
            "(Segue instruções). Desenvolver planos de teste para o teste de unidade.",
            "(Faz com orientação). Propor casos de teste segundo algum critério da técnica de teste funcional para o teste de unidade.",
            "(Faz com orientação). Propor casos de teste segundo algum critério da técnica de teste estrutural para o teste de unidade.",
            "(Faz com orientação). Construir código para automação do teste de software.",
            "(Segue instruções). Aplicar teste exploratório no teste de sistema.",
            "(Faz sem orientação). Executar casos de teste.",
            "(Faz sem orientação). Citar e explicar métricas de teste de software.",
            "(Segue instruções). Realizar medições pertinentes a teste de software.",
            "(Faz com orientação). Documentar atividades do teste de software.",
            "(Segue instruções). Identificar e utilizar ferramentas de teste de software."
        ]
    },
    {
        "id": "D35",
        "nome": "Prática em Engenharia de Software",
        "nucleo": "NC",
        "teo": 0,
        "pra": 320,
        "total": 320,
        "periodo": "9°",
        "unidade": "INF",
        "obrigatoria": "Sim",
        "preRequisito:": [],
        "ementa": [
            "1. Aplicação do corpo de conhecimento da Engenharia de Software no contexto de projetos realizados em uma Fábrica de Software (320h): emprego de processos de Engenharia de Software em abrangência e profundidade; seleção e utilização de normas, métodos, técnicas e ferramentas de Engenharia de Software para atingir objetivos estabelecidos no projeto; integração e consolidação de conhecimentos e habilidades esperadas do profissional de Engenharia de Software; exercício de práticas e atitudes profissionais embasadas no código de ética e na postura profissional da Engenharia de Software; prática em processos técnicos de Engenharia de Software; prática em Gestão de Engenharia de Software; prática em Tecnologias de Engenharia de Software."
        ],
        "condicoesMinimas": [
            "(Faz sem orientação). Realizar pacotes de trabalho, desenvolvendo produtos ou serviços dentro de um projeto na Fábrica de Software, aplicando as disciplinas que formam o corpo de conhecimento da Engenharia de Software.",
            "(Faz sem orientação). Planejar, realizar e modificar de forma apropriada produtos e serviços pertinentes a processos organizacionais da Engenharia de Software, dentro do contexto da Fábrica de Software.",
            "(Faz sem orientação). Atuar individualmente e nas equipes de trabalho segundo o código de ética e a postura profissional da Engenharia de Software."
        ]
    }
]